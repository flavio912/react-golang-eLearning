stages:
  - test
  - build
  - deploy-staging

services:
  - docker:dind

variables:
  MANAGER_IMAGE_TAG: $CI_REGISTRY_IMAGE:manager
  ADMIN_IMAGE_TAG: $CI_REGISTRY_IMAGE:admin

test:
  stage: test
  image: node:10.16.2
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - git diff --exit-code --no-index ./react/delegate/src/sharedComponents ./react/manager/src/sharedComponents

test-api:
  stage: test
  image: docker/compose:latest
  only:
    changes:
      - api/**/*
  before_script:
    - export DOCKER_HOST="tcp://localhost:2375"
    - docker info
    - docker-compose --version
    - apk add --no-cache git bash
  script:
    - api/dev_env/run_test.sh --cover --unique --build

build-admin:
  stage: build
  image: node:10.16.2
  script:
    - cd ./react/admin
    - yarn
    - yarn run build
  cache:
    paths:
      - node_modules/
  only:
    changes:
      - react/admin/**/*
  tags:
    - big
  artifacts:
    expire_in: 3d
    paths:
      - react/admin/build/

build-delegate-storybook:
  stage: build
  image: node:10.16.2
  script:
    - cd react/delegate
    - yarn
    - yarn run storybook-build
  cache:
    paths:
      - node_modules/
  only:
    changes:
      - react/delegate/**/*
      - .gitlab-ci.yml
  tags:
    - big
  artifacts:
    expire_in: 3d
    paths:
      - react/delegate/storybook_build

build-delegate-webpack:
  stage: build
  image: node:10.16.2
  script:
    - cd react/delegate
    - yarn
    - yarn run build
  only:
    changes:
      - react/manager/**/*
      - react/delegate/**/*
      - .gitlab-ci.yml
  cache:
    paths:
      - node_modules/
  tags:
    - big
  artifacts:
    expire_in: 3d
    paths:
      - react/delegate/build/

build-publicSite-webpack:
  stage: build
  image: node:10.16.2
  script:
    - cd react/publicSite
    - yarn
    - yarn run build
  only:
    changes:
      - react/publicSite/**/*
      - .gitlab-ci.yml
  cache:
    paths:
      - node_modules/
  tags:
    - big
  artifacts:
    expire_in: 3d
    paths:
      - react/publicSite/build/

build-manager-storybook:
  stage: build
  image: node:10.16.2
  script:
    - cd react/manager
    - yarn
    - yarn run storybook-build
  cache:
    paths:
      - node_modules/
  only:
    changes:
      - react/manager/**/*
      - react/delegate/**/*
      - .gitlab-ci.yml
  tags:
    - big
  artifacts:
    expire_in: 3d
    paths:
      - react/manager/storybook_build

build-manager-webpack:
  stage: build
  image: node:10.16.2
  script:
    - cd react/manager
    - yarn
    - yarn run build
  only:
    changes:
      - react/manager/**/*
      - .gitlab-ci.yml
  cache:
    paths:
      - node_modules/
  tags:
    - big
  artifacts:
    expire_in: 3d
    paths:
      - react/manager/build/

build-api:
  stage: build
  image: golang:1.14.1-alpine
  script:
    - cd api
    - go mod download
    - go build main.go
  artifacts:
    paths:
      - api/main
    expire_in: 3d
  only:
    changes:
      - api/**/*
      - .gitlab-ci.yml

deploy-storybooks:
  stage: deploy-staging
  image: python:3.8-slim-buster
  only:
    refs:
      - dev
    changes:
      - react/manager/**/*
      - react/delegate/**/*
      - .gitlab-ci.yml
  cache:
    paths:
      - node_modules/
  script:
    - pip install awscli
    - apt-get update
    - apt-get install -y zip
    - cd ./react/manager
    - aws s3 sync ./storybook_build s3://ttc-manager-storybook/ --acl=public-read
    - cd ../delegate
    - aws s3 sync ./storybook_build s3://ttc-delegate-storybook/ --acl=public-read

deploy-manager-staging:
  stage: deploy-staging
  image: python:3.8-slim-buster
  environment:
    name: manager-staging
    url: http://ttc-manager.devserver.london
  only:
    refs:
      - dev
    changes:
      - react/manager/**/*
      - .gitlab-ci.yml
  variables:
    EB_ENV: 'react-manager'
  script:
    - pip install awscli
    - apt-get update
    - apt-get install -y zip
    - cd ./react/manager
    - chmod +x ./bin/deploy.sh
    - ./bin/deploy.sh

deploy-publicSite-staging:
  stage: deploy-staging
  image: python:3.8-slim-buster
  environment:
    name: public-staging
    url: http://www.ttc.devserver.london
  only:
    refs:
      - dev
    changes:
      - react/publicSite/**/*
      - .gitlab-ci.yml
  variables:
    EB_ENV: 'react-public'
  script:
    - pip install awscli
    - apt-get update
    - apt-get install -y zip
    - cd ./react/publicSite
    - chmod +x ./bin/deploy.sh
    - ./bin/deploy.sh

deploy-delegate-staging:
  stage: deploy-staging
  image: python:3.8-slim-buster
  environment:
    name: delegate-staging
    url: http://ttc-delegate.devserver.london
  only:
    refs:
      - dev
    changes:
      - react/delegate/**/*
      - .gitlab-ci.yml
  variables:
    EB_ENV: 'react-delegate-1'
  script:
    - pip install awscli
    - apt-get update
    - apt-get install -y zip
    - cd ./react/delegate
    - chmod +x ./bin/deploy.sh
    - ./bin/deploy.sh

deploy-admin-staging:
  stage: deploy-staging
  image: python:3.8-slim-buster
  environment:
    name: admin-staging
    url: http://ttc-admin.devserver.london
  only:
    refs:
      - dev
    changes:
      - react/admin/**/*
  variables:
    EB_ENV: 'react-admin'
  script:
    - pip install awscli
    - apt-get update
    - apt-get install -y zip
    - cd ./react/admin
    - chmod +x ./bin/deploy.sh
    - ./bin/deploy.sh

deploy-api-staging:
  stage: deploy-staging
  image: python:3.8-slim-buster
  environment:
    name: admin-staging
    url: http://ttc-api.devserver.london
  only:
    refs:
      - dev
    changes:
      - api/**/*
  variables:
    EB_ENV: 'ttc-api-staging'
  script:
    - pip install awscli
    - apt-get update
    - apt-get install -y zip
    - cd ./api
    - chmod +x ./bin/deploy.sh
    - ./bin/deploy.sh
