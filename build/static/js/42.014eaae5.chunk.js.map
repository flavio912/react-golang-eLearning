{"version":3,"sources":["views/KanbanBoard/Header.js","views/KanbanBoard/TaskList.js","views/KanbanBoard/TaskListItem.js","views/KanbanBoard/TaskDetails.js","views/KanbanBoard/index.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","Header","onListAdd","className","rest","classes","clsx","Grid","alignItems","container","justify","item","Typography","component","gutterBottom","variant","Button","color","onClick","userSelect","whiteSpace","height","display","flexDirection","verticalAlign","width","margin","breakpoints","down","isDraggingOver","header","backgroundColor","palette","primary","main","contrastText","borderRadius","counter","marginLeft","headerAction","content","flexGrow","overflowY","inner","TaskList","title","total","provided","snapshot","children","ref","innerRef","Tooltip","IconButton","edge","options","suppressScrollX","outline","marginBottom","isDragging","paddingTop","stats","files","icon","comments","date","progress","marginTop","TaskListItem","task","onOpen","style","Card","draggableProps","dragHandleProps","CardHeader","action","GenericMoreButton","subheader","subheaderTypographyProps","titleTypographyProps","CardContent","StackAvatars","avatars","members","limit","moment","deadline","format","defaultProps","position","top","left","transform","boxShadow","shadows","maxWidth","TaskDetails","open","onClose","Modal","desc","displayName","overflowX","KanbanBoard","useState","lists","setLists","openedTask","setOpenedTask","useEffect","mounted","axios","get","then","response","tempLists","data","list","push","items","forEach","id","tasks","Page","uuid","prevLists","onDragEnd","event","source","destination","newLists","_","clone","sourceList","find","droppableId","destinationList","splice","index","removedItem","map","key","length","draggableId","handleTaskOpen","placeholder","Boolean"],"mappings":"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","file":"static/js/42.014eaae5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction Header({ onListAdd, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Organization\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Kanban Board\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            onClick={onListAdd}\n            variant=\"contained\"\n          >\n            Add list\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  onListAdd: PropTypes.func\n};\n\nexport default Header;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, IconButton, Tooltip } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    userSelect: 'none',\n    whiteSpace: 'normal',\n    height: '100%',\n    display: 'inline-flex',\n    flexDirection: 'column',\n    verticalAlign: 'top',\n    width: 500,\n    padding: theme.spacing(0, 1),\n    margin: theme.spacing(0, 1),\n    [theme.breakpoints.down('xs')]: {\n      width: 300\n    }\n  },\n  isDraggingOver: {},\n  header: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    padding: theme.spacing(0.5, 2),\n    borderRadius: 4,\n    display: 'flex',\n    alignItems: 'center'\n  },\n  counter: {\n    marginLeft: theme.spacing(1)\n  },\n  headerAction: {\n    marginLeft: 'auto'\n  },\n  content: {\n    flexGrow: 1,\n    overflowY: 'hidden'\n  },\n  inner: {\n    padding: theme.spacing(2, 3)\n  }\n}));\n\nfunction TaskList({\n  title,\n  total,\n  provided,\n  snapshot,\n  className,\n  children,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n      ref={provided.innerRef}\n    >\n      <div className={classes.header}>\n        <Typography\n          color=\"inherit\"\n          variant=\"h5\"\n        >\n          {title}\n        </Typography>\n        <Typography\n          className={classes.counter}\n          color=\"inherit\"\n          variant=\"h6\"\n        >\n          -\n          {' '}\n          {total}\n        </Typography>\n        <div className={classes.headerAction}>\n          <Tooltip title=\"Add task\">\n            <IconButton\n              color=\"inherit\"\n              edge=\"end\"\n              variant=\"contained\"\n            >\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </div>\n      <div\n        className={clsx(classes.content, {\n          [classes.isDraggingOver]: snapshot.isDraggingOver\n        })}\n      >\n        <PerfectScrollbar options={{ suppressScrollX: true }}>\n          <div className={classes.inner}>{children}</div>\n        </PerfectScrollbar>\n      </div>\n    </div>\n  );\n}\n\nTaskList.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  provided: PropTypes.object.isRequired,\n  snapshot: PropTypes.object.isRequired,\n  title: PropTypes.string,\n  total: PropTypes.number\n};\n\nexport default TaskList;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography\n} from '@material-ui/core';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport StackAvatars from 'src/components/StackAvatars';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    outline: 'none',\n    marginBottom: theme.spacing(2)\n  },\n  isDragging: {},\n  content: {\n    paddingTop: 0\n  },\n  stats: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  files: {\n    color: theme.palette.icon,\n    marginLeft: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  comments: {\n    color: theme.palette.icon,\n    marginLeft: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  date: {\n    marginLeft: theme.spacing(2)\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction TaskListItem({\n  task,\n  // eslint-disable-next-line no-unused-vars\n  onOpen,\n  provided,\n  snapshot,\n  className,\n  style,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      ref={provided.innerRef}\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n      className={clsx(\n        classes.root,\n        {\n          [classes.isDragging]: snapshot.isDragging\n        },\n        className\n      )}\n      style={{ ...style, ...provided.draggableProps.style }}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        subheader={`#${task.ref}`}\n        subheaderTypographyProps={{ variant: 'overline' }}\n        title={task.title}\n        titleTypographyProps={{ variant: 'h5', gutterBottom: true }}\n      />\n      <CardContent className={classes.content}>\n        <div className={classes.stats}>\n          <StackAvatars\n            avatars={task.members}\n            limit={4}\n          />\n          {task.files > 0 && (\n            <div className={classes.files}>\n              <AttachFileIcon />\n            </div>\n          )}\n          {task.comments > 0 && (\n            <div className={classes.comments}>\n              <ChatIcon />\n            </div>\n          )}\n          <div className={classes.flexGrow} />\n          <Typography\n            className={classes.date}\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            {moment(task.deadline).format('D MMM')}\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nTaskListItem.propTypes = {\n  className: PropTypes.string,\n  onOpen: PropTypes.func,\n  provided: PropTypes.object.isRequired,\n  snapshot: PropTypes.object.isRequired,\n  style: PropTypes.object,\n  task: PropTypes.object.isRequired\n};\n\nTaskListItem.defaultProps = {\n  style: {},\n  onOpen: () => {}\n};\n\nexport default TaskListItem;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Modal,\n  Card,\n  CardContent,\n  Typography\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 360,\n    maxWidth: '100%'\n  }\n}));\n\nfunction TaskDetails({\n  open,\n  onClose,\n  task,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Modal\n      onClose={onClose}\n      open={open}\n    >\n      <Card\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <CardContent>\n          <Typography variant=\"h6\">{task.title}</Typography>\n          <Typography variant=\"body1\">{task.desc}</Typography>\n        </CardContent>\n      </Card>\n    </Modal>\n  );\n}\n\nTaskDetails.displayName = 'TaskDetails';\n\nTaskDetails.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  task: PropTypes.any\n};\n\nTaskDetails.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default TaskDetails;\n","import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport _ from 'lodash';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\nimport axios from 'src/utils/axios';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport TaskList from './TaskList';\nimport TaskListItem from './TaskListItem';\nimport TaskDetails from './TaskDetails';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  container: {\n    flexGrow: 1,\n    padding: theme.spacing(0, 3, 3, 1),\n    overflowX: 'auto',\n    overflowY: 'hidden',\n    whiteSpace: 'nowrap'\n  }\n}));\n\nfunction KanbanBoard() {\n  const classes = useStyles();\n  const [lists, setLists] = useState([]);\n  const [openedTask, setOpenedTask] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchData = () => {\n      axios.get('/api/kanban').then((response) => {\n        if (mounted) {\n          const tempLists = [];\n\n          // eslint-disable-next-line no-restricted-syntax\n          for (const list of response.data.lists) {\n            tempLists.push({ ...list, items: [] });\n          }\n\n          // eslint-disable-next-line no-restricted-syntax\n          for (const task of response.data.tasks) {\n            tempLists.forEach((list) => {\n              if (list.id === task.list) {\n                list.items.push(task);\n              }\n            });\n          }\n\n          setLists(tempLists);\n        }\n      });\n    };\n\n    fetchData();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const handleDragEnd = (event) => {\n    const { source, destination } = event;\n\n    if (!destination) {\n      return;\n    }\n\n    const newLists = _.clone(lists);\n    const sourceList = newLists.find((list) => list.id === source.droppableId);\n    const destinationList = newLists.find(\n      (list) => list.id === destination.droppableId\n    );\n    const [removedItem] = sourceList.items.splice(source.index, 1);\n\n    if (source.droppableId === destination.droppableId) {\n      sourceList.items.splice(destination.index, 0, removedItem);\n      setLists(newLists);\n    } else {\n      removedItem.list = destination.droppableId;\n      destinationList.items.splice(destination.index, 0, removedItem);\n      setLists(newLists);\n    }\n  };\n\n  const handleListAdd = () => {\n    const list = {\n      id: uuid(),\n      title: 'New list',\n      items: []\n    };\n\n    setLists((prevLists) => [...prevLists, list]);\n  };\n\n  const handleTaskOpen = (task) => {\n    setOpenedTask(task);\n  };\n\n  const handleTaskClose = () => {\n    setOpenedTask(null);\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Kanban Board\"\n    >\n      <Header onListAdd={handleListAdd} />\n      <div className={classes.container}>\n        <DragDropContext onDragEnd={handleDragEnd}>\n          {lists.map((list) => (\n            <Droppable\n              droppableId={list.id}\n              key={list.id}\n            >\n              {(provided, snapshot) => (\n                <TaskList\n                  provided={provided}\n                  snapshot={snapshot}\n                  title={list.title}\n                  total={list.items.length}\n                >\n                  {list.items.map((task, index) => (\n                    <Draggable\n                      draggableId={task.id}\n                      index={index}\n                      key={task.id}\n                    >\n                      {(provided, snapshot) => (\n                        <TaskListItem\n                          onOpen={() => handleTaskOpen(task)}\n                          provided={provided}\n                          snapshot={snapshot}\n                          task={task}\n                        />\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </TaskList>\n              )}\n            </Droppable>\n          ))}\n        </DragDropContext>\n      </div>\n      <TaskDetails\n        onClose={handleTaskClose}\n        open={Boolean(openedTask)}\n        task={openedTask}\n      />\n    </Page>\n  );\n}\n\nexport default KanbanBoard;\n"],"sourceRoot":""}