{"version":3,"sources":["views/Calendar/AddEditEvent.js","views/Calendar/Toolbar.js","views/Calendar/index.js"],"names":["useStyles","makeStyles","theme","root","position","top","left","transform","outline","boxShadow","shadows","width","maxHeight","overflowY","maxWidth","field","marginTop","spacing","cancelButton","marginLeft","confirmButton","color","palette","common","white","backgroundColor","colors","green","defaultEvent","title","desc","allDay","start","moment","toDate","end","AddEditEvent","forwardRef","props","ref","event","onDelete","onCancel","onAdd","onEdit","className","rest","classes","useState","values","setValues","mode","handleFieldChange","e","persist","prevValues","target","name","type","checked","value","Card","clsx","CardContent","Typography","align","gutterBottom","variant","TextField","fullWidth","label","onChange","FormControlLabel","control","Switch","defaultValue","format","disabled","Divider","CardActions","IconButton","edge","onClick","Button","id","uuid","viewOptions","icon","ViewConfigIcon","ViewWeekIcon","ViewDayIcon","ViewAgendaIcon","Toolbar","date","view","onDatePrev","onDateNext","onEventAdd","onViewChange","onDateToday","Grid","alignItems","container","justify","item","component","ButtonGroup","Hidden","smDown","map","viewOption","Icon","Tooltip","key","paddingTop","paddingBottom","borderColor","divider","grey","typography","body2","body1","h6","subtitle2","fontWeight","text","secondary","padding","blueGrey","primary","main","contrastText","borderWidth","opacity","subtitle1","card","Calendar","calendarRef","useRef","useTheme","mobileDevice","useMediaQuery","breakpoints","down","setView","setDate","events","setEvents","open","eventModal","setEventModal","handleModalClose","useEffect","mounted","axios","get","then","response","data","calendarApi","current","getApi","newView","changeView","Page","Container","next","getDate","prev","today","allDayMaintainDuration","defaultDate","defaultView","droppable","editable","eventClick","info","selected","find","eventResizableFromStart","header","height","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","timelinePlugin","rerenderDelay","selectable","weekends","Modal","onClose","currentEvents","filter"],"mappings":"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","file":"static/js/37.1ae495c4.chunk.js","sourcesContent":["/* eslint-disable react/display-name */\nimport React, { useState, forwardRef } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Typography,\n  TextField,\n  Button,\n  IconButton,\n  Divider,\n  FormControlLabel,\n  Switch,\n  colors\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 700,\n    maxHeight: '100%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  field: {\n    marginTop: theme.spacing(3)\n  },\n  cancelButton: {\n    marginLeft: 'auto'\n  },\n  confirmButton: {\n    color: theme.palette.common.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst defaultEvent = {\n  title: 'Event title',\n  desc: 'Event description',\n  allDay: false,\n  start: moment().toDate(),\n  end: moment().toDate()\n};\n\nconst AddEditEvent = forwardRef((props, ref) => {\n  const {\n    event,\n    onDelete,\n    onCancel,\n    onAdd,\n    onEdit,\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [values, setValues] = useState(event || { ...defaultEvent });\n  const mode = event ? 'edit' : 'add';\n\n  const handleFieldChange = (e) => {\n    e.persist();\n    setValues((prevValues) => ({\n      ...prevValues,\n      [e.target.name]:\n        e.target.type === 'checkbox' ? e.target.checked : e.target.value\n    }));\n  };\n\n  const handleDelete = () => {\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  const handleAdd = () => {\n    if (!values.title || !values.desc) {\n      return;\n    }\n\n    onAdd({ ...values, id: uuid() });\n  };\n\n  const handleEdit = () => {\n    if (!values.title || !values.desc) {\n      return;\n    }\n\n    onEdit(values);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      ref={ref}\n    >\n      <form>\n        <CardContent>\n          <Typography\n            align=\"center\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {mode === 'add' ? 'Add Event' : 'Edit Event'}\n          </Typography>\n          <TextField\n            className={classes.field}\n            fullWidth\n            label=\"Title\"\n            name=\"title\"\n            onChange={handleFieldChange}\n            value={values.title}\n            variant=\"outlined\"\n          />\n          <TextField\n            className={classes.field}\n            fullWidth\n            label=\"Description\"\n            name=\"desc\"\n            onChange={handleFieldChange}\n            value={values.desc}\n            variant=\"outlined\"\n          />\n          <FormControlLabel\n            className={classes.field}\n            control={(\n              <Switch\n                checked={values.allDay}\n                name=\"allDay\"\n                onChange={handleFieldChange}\n              />\n            )}\n            label=\"All day\"\n          />\n          <TextField\n            className={classes.field}\n            defaultValue={moment(values.start).format('YYYY-MM-DDThh:mm:ss')}\n            fullWidth\n            label=\"Start date\"\n            name=\"start\"\n            onChange={handleFieldChange}\n            type=\"datetime-local\"\n            variant=\"outlined\"\n          />\n          <TextField\n            className={classes.field}\n            defaultValue={moment(values.end).format('YYYY-MM-DDThh:mm:ss')}\n            disabled={values.allDay}\n            fullWidth\n            label=\"End date\"\n            name=\"end\"\n            onChange={handleFieldChange}\n            type=\"datetime-local\"\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <IconButton\n            edge=\"start\"\n            onClick={handleDelete}\n          >\n            <DeleteIcon />\n          </IconButton>\n          <Button\n            className={classes.cancelButton}\n            onClick={onCancel}\n            variant=\"contained\"\n          >\n            Cancel\n          </Button>\n          {mode === 'add' ? (\n            <Button\n              className={classes.confirmButton}\n              onClick={handleAdd}\n              variant=\"contained\"\n            >\n              Add\n            </Button>\n          ) : (\n            <Button\n              className={classes.confirmButton}\n              onClick={handleEdit}\n              variant=\"contained\"\n            >\n              Save\n            </Button>\n          )}\n        </CardActions>\n      </form>\n    </Card>\n  );\n});\n\nAddEditEvent.propTypes = {\n  className: PropTypes.string,\n  event: PropTypes.object,\n  onAdd: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func\n};\n\nexport default AddEditEvent;\n","import React from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Grid,\n  Hidden,\n  Typography,\n  Tooltip,\n  ButtonGroup,\n  IconButton,\n  Button\n} from '@material-ui/core';\nimport ViewConfigIcon from '@material-ui/icons/ViewComfyOutlined';\nimport ViewWeekIcon from '@material-ui/icons/ViewWeekOutlined';\nimport ViewDayIcon from '@material-ui/icons/ViewDayOutlined';\nimport ViewAgendaIcon from '@material-ui/icons/ViewAgendaOutlined';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst viewOptions = [\n  {\n    label: 'Month',\n    value: 'dayGridMonth',\n    icon: ViewConfigIcon\n  },\n  {\n    label: 'Week',\n    value: 'timeGridWeek',\n    icon: ViewWeekIcon\n  },\n  {\n    label: 'Day',\n    value: 'timeGridDay',\n    icon: ViewDayIcon\n  },\n  {\n    label: 'Agenda',\n    value: 'listWeek',\n    icon: ViewAgendaIcon\n  }\n];\n\nfunction Toolbar({\n  date,\n  view,\n  onDatePrev,\n  onDateNext,\n  onEventAdd,\n  onViewChange,\n  onDateToday,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Calendar\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Here's what you planned\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            onClick={onEventAdd}\n            variant=\"contained\"\n          >\n            Add event\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <ButtonGroup>\n            <Button onClick={onDatePrev}>Prev</Button>\n            <Button onClick={onDateToday}>Today</Button>\n            <Button onClick={onDateNext}>Next</Button>\n          </ButtonGroup>\n        </Grid>\n        <Hidden smDown>\n          <Grid item>\n            <Typography variant=\"h3\">\n              {moment(date).format('MMMM YYYY')}\n            </Typography>\n          </Grid>\n          <Grid item>\n            {viewOptions.map(viewOption => {\n              const Icon = viewOption.icon;\n\n              return (\n                <Tooltip\n                  key={viewOption.value}\n                  title={viewOption.label}\n                >\n                  <IconButton\n                    color={viewOption.value === view ? 'primary' : 'default'}\n                    onClick={() => onViewChange(viewOption.value)}\n                  >\n                    <Icon />\n                  </IconButton>\n                </Tooltip>\n              );\n            })}\n          </Grid>\n        </Hidden>\n      </Grid>\n    </div>\n  );\n}\n\nToolbar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  date: PropTypes.any.isRequired,\n  onDateNext: PropTypes.func,\n  onDatePrev: PropTypes.func,\n  onDateToday: PropTypes.func,\n  onEventAdd: PropTypes.func,\n  onViewChange: PropTypes.func,\n  view: PropTypes.string.isRequired\n};\n\nexport default Toolbar;\n","import React, { useState, useRef, useEffect } from 'react';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport timelinePlugin from '@fullcalendar/timeline';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Container,\n  Modal,\n  Card,\n  CardContent,\n  colors,\n  useTheme,\n  useMediaQuery\n} from '@material-ui/core';\nimport '@fullcalendar/core/main.css';\nimport '@fullcalendar/daygrid/main.css';\nimport '@fullcalendar/timegrid/main.css';\nimport '@fullcalendar/list/main.css';\nimport axios from 'src/utils/axios';\nimport Page from 'src/components/Page';\nimport AddEditEvent from './AddEditEvent';\nimport Toolbar from './Toolbar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    '& .fc-unthemed td': {\n      borderColor: theme.palette.divider\n    },\n    '& .fc-widget-header': {\n      backgroundColor: colors.grey[50]\n    },\n    '& .fc-axis': {\n      ...theme.typography.body2\n    },\n    '& .fc-list-item-time': {\n      ...theme.typography.body2\n    },\n    '& .fc-list-item-title': {\n      ...theme.typography.body1\n    },\n    '& .fc-list-heading-main': {\n      ...theme.typography.h6\n    },\n    '& .fc-list-heading-alt': {\n      ...theme.typography.h6\n    },\n    '& .fc th': {\n      borderColor: theme.palette.divider\n    },\n    '& .fc-day-header': {\n      ...theme.typography.subtitle2,\n      fontWeight: 500,\n      color: theme.palette.text.secondary,\n      padding: theme.spacing(1),\n      backgroundColor: colors.grey[50]\n    },\n    '& .fc-day-top': {\n      ...theme.typography.body2\n    },\n    '& .fc-highlight': {\n      backgroundColor: colors.blueGrey[50]\n    },\n    '& .fc-event': {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText,\n      borderWidth: 2,\n      opacity: 0.9,\n      '& .fc-time': {\n        ...theme.typography.h6,\n        color: 'inherit'\n      },\n      '& .fc-title': {\n        ...theme.typography.body1,\n        color: 'inherit'\n      }\n    },\n    '& .fc-list-empty': {\n      ...theme.typography.subtitle1\n    }\n  },\n  card: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nfunction Calendar() {\n  const classes = useStyles();\n  const calendarRef = useRef(null);\n  const theme = useTheme();\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n  const [view, setView] = useState(mobileDevice ? 'listWeek' : 'dayGridMonth');\n  const [date, setDate] = useState(moment('2019-07-30 08:00:00').toDate());\n  const [events, setEvents] = useState([]);\n  const [eventModal, setEventModal] = useState({\n    open: false,\n    event: null\n  });\n\n  const handleEventClick = (info) => {\n    const selected = events.find((event) => event.id === info.event.id);\n\n    setEventModal({\n      open: true,\n      event: selected\n    });\n  };\n\n  const handleEventNew = () => {\n    setEventModal({\n      open: true,\n      event: null\n    });\n  };\n\n  const handleEventDelete = (event) => {\n    setEvents((currentEvents) => currentEvents.filter((e) => e.id !== event.id));\n    setEventModal({\n      open: false,\n      event: null\n    });\n  };\n\n  const handleModalClose = () => {\n    setEventModal({\n      open: false,\n      event: null\n    });\n  };\n\n  const handleEventAdd = (event) => {\n    setEvents((currentEvents) => [...currentEvents, event]);\n    setEventModal({\n      open: false,\n      event: null\n    });\n  };\n\n  const handleEventEdit = (event) => {\n    setEvents((currentEvents) => currentEvents.map((e) => (e.id === event.id ? event : e)));\n    setEventModal({\n      open: false,\n      event: null\n    });\n  };\n\n  const handleDateToday = () => {\n    const calendarApi = calendarRef.current.getApi();\n\n    calendarApi.today();\n    setDate(calendarApi.getDate());\n  };\n\n  const handleViewChange = (newView) => {\n    const calendarApi = calendarRef.current.getApi();\n\n    calendarApi.changeView(newView);\n    setView(newView);\n  };\n\n  const handleDatePrev = () => {\n    const calendarApi = calendarRef.current.getApi();\n\n    calendarApi.prev();\n    setDate(calendarApi.getDate());\n  };\n\n  const handleDateNext = () => {\n    const calendarApi = calendarRef.current.getApi();\n\n    calendarApi.next();\n    setDate(calendarApi.getDate());\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchEvents = () => {\n      if (mounted) {\n        axios\n          .get('/api/calendar')\n          .then((response) => setEvents(response.data.events));\n      }\n    };\n\n    fetchEvents();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    const calendarApi = calendarRef.current.getApi();\n    const newView = mobileDevice ? 'listWeek' : 'dayGridMonth';\n\n    calendarApi.changeView(newView);\n    setView(newView);\n  }, [mobileDevice]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Calendar\"\n    >\n      <Container maxWidth={false}>\n        <Toolbar\n          date={date}\n          onDateNext={handleDateNext}\n          onDatePrev={handleDatePrev}\n          onDateToday={handleDateToday}\n          onEventAdd={handleEventNew}\n          onViewChange={handleViewChange}\n          view={view}\n        />\n        <Card className={classes.card}>\n          <CardContent>\n            <FullCalendar\n              allDayMaintainDuration\n              defaultDate={date}\n              defaultView={view}\n              droppable\n              editable\n              eventClick={handleEventClick}\n              eventResizableFromStart\n              events={events}\n              header={false}\n              height={800}\n              plugins={[\n                dayGridPlugin,\n                timeGridPlugin,\n                interactionPlugin,\n                listPlugin,\n                timelinePlugin\n              ]}\n              ref={calendarRef}\n              rerenderDelay={10}\n              selectable\n              weekends\n            />\n          </CardContent>\n        </Card>\n        <Modal\n          onClose={handleModalClose}\n          open={eventModal.open}\n        >\n          <AddEditEvent\n            event={eventModal.event}\n            onAdd={handleEventAdd}\n            onCancel={handleModalClose}\n            onDelete={handleEventDelete}\n            onEdit={handleEventEdit}\n          />\n        </Modal>\n      </Container>\n    </Page>\n  );\n}\n\nexport default Calendar;\n"],"sourceRoot":""}