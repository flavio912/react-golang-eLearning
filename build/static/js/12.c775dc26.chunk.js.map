{"version":3,"sources":["views/Settings/Header.js","views/Settings/General/ProfileDetails.js","views/Settings/General/SuccessSnackbar.js","views/Settings/General/GeneralSettings.js","views/Settings/General/index.js","views/Settings/Subscription.js","views/Settings/Notifications.js","views/Settings/Security.js","views/Settings/index.js"],"names":["useStyles","makeStyles","root","Header","className","rest","classes","clsx","Typography","component","gutterBottom","variant","theme","content","display","alignItems","flexDirection","textAlgin","name","marginTop","spacing","avatar","height","width","removeBotton","ProfileDetails","profile","Card","CardContent","Avatar","src","firstName","lastName","color","state","country","timezone","CardActions","Button","backgroundColor","colors","green","message","icon","marginRight","SuccessSnackbar","open","onClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","defaultProps","saveButton","palette","common","white","stateOptions","GeneralSettings","useState","openSnackbar","setOpenSnackbar","email","phone","isPublic","canHire","values","setValues","handleChange","event","persist","target","type","checked","value","onSubmit","preventDefault","CardHeader","title","Divider","Grid","container","item","md","xs","TextField","fullWidth","helperText","label","onChange","required","select","SelectProps","native","map","key","Switch","edge","General","setProfile","useEffect","mounted","axios","get","then","response","data","lg","xl","action","overview","flexWrap","justifyContent","breakpoints","down","product","productImage","details","notice","Subscription","subscription","setSubscription","size","currency","price","alt","proposalsLeft","templatesLeft","invitesLeft","adsLeft","hasAnalytics","hasEmailAlerts","Link","RouterLink","to","Notifications","wrap","sm","FormControlLabel","control","Checkbox","defaultChecked","Security","password","confirm","valid","disabled","paddingTop","paddingBottom","tabs","divider","grey","Settings","match","history","currentTab","params","tab","find","Page","Container","maxWidth","Tabs","push","scrollButtons","Tab"],"mappings":"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","file":"static/js/12.c775dc26.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Settings\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        Change account information\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Avatar,\n  Typography,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    textAlgin: 'center'\n  },\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  },\n  removeBotton: {\n    width: '100%'\n  }\n}));\n\nfunction ProfileDetails({ profile, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent className={classes.content}>\n        <Avatar\n          className={classes.avatar}\n          src={profile.avatar}\n        />\n        <Typography\n          className={classes.name}\n          gutterBottom\n          variant=\"h3\"\n        >\n          {`${profile.firstName} ${profile.lastName}`}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n        >\n          {`${profile.state}, ${profile.country}`}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {profile.timezone}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          className={classes.removeBotton}\n          variant=\"text\"\n        >\n          Remove picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Snackbar, SnackbarContent, colors } from '@material-ui/core';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircleOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    backgroundColor: colors.green[600]\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  icon: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nfunction SuccessSnackbar({ open, onClose }) {\n  const classes = useStyles();\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'center'\n      }}\n      autoHideDuration={6000}\n      onClose={onClose}\n      open={open}\n    >\n      <SnackbarContent\n        className={classes.content}\n        message={(\n          <span className={classes.message}>\n            <CheckCircleIcon className={classes.icon} />\n            Successfully saved changes!\n          </span>\n        )}\n        variant=\"h6\"\n      />\n    </Snackbar>\n  );\n}\n\nSuccessSnackbar.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nSuccessSnackbar.defaultProps = {\n  open: true,\n  onClose: () => {}\n};\n\nexport default SuccessSnackbar;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nimport SuccessSnackbar from './SuccessSnackbar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.common.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nconst stateOptions = ['Alabama', 'New York', 'San Francisco'];\n\nfunction GeneralSettings({ profile, className, ...rest }) {\n  const classes = useStyles();\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [values, setValues] = useState({\n    firstName: profile.firstName,\n    lastName: profile.lastName,\n    email: profile.email,\n    phone: profile.phone,\n    state: profile.state,\n    country: profile.country,\n    isPublic: profile.isPublic,\n    canHire: profile.canHire\n  });\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues({\n      ...values,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setOpenSnackbar(true);\n  };\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <form onSubmit={handleSubmit}>\n        <CardHeader title=\"Profile\" />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={4}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"text\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                select\n                // eslint-disable-next-line react/jsx-sort-props\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {stateOptions.map((state) => (\n                  <option\n                    key={state}\n                    value={state}\n                  >\n                    {state}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <Typography variant=\"h6\">Make Contact Info Public</Typography>\n              <Typography variant=\"body2\">\n                Means that anyone viewing your profile will be able to see your\n                contacts details\n              </Typography>\n              <Switch\n                checked={values.isPublic}\n                color=\"secondary\"\n                edge=\"start\"\n                name=\"isPublic\"\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <Typography variant=\"h6\">Available to hire</Typography>\n              <Typography variant=\"body2\">\n                Toggling this will let your teamates know that you are available\n                for acquireing new projects\n              </Typography>\n              <Switch\n                checked={values.canHire}\n                color=\"secondary\"\n                edge=\"start\"\n                name=\"canHire\"\n                onChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            className={classes.saveButton}\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Save Changes\n          </Button>\n        </CardActions>\n      </form>\n      <SuccessSnackbar\n        onClose={handleSnackbarClose}\n        open={openSnackbar}\n      />\n    </Card>\n  );\n}\n\nGeneralSettings.propTypes = {\n  className: PropTypes.string,\n  profile: PropTypes.object.isRequired\n};\n\nexport default GeneralSettings;\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport ProfileDetails from './ProfileDetails';\nimport GeneralSettings from './GeneralSettings';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction General({ className, ...rest }) {\n  const classes = useStyles();\n  const [profile, setProfile] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchProfile = () => {\n      axios.get('/api/account/profile').then((response) => {\n        if (mounted) {\n          setProfile(response.data.profile);\n        }\n      });\n    };\n\n    fetchProfile();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!profile) {\n    return null;\n  }\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <ProfileDetails profile={profile} />\n      </Grid>\n      <Grid\n        item\n        lg={8}\n        md={6}\n        xl={9}\n        xs={12}\n      >\n        <GeneralSettings profile={profile} />\n      </Grid>\n    </Grid>\n  );\n}\n\nGeneral.propTypes = {\n  className: PropTypes.string\n};\n\nexport default General;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Link,\n  Typography\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginRight: 0,\n    marginTop: 0\n  },\n  overview: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column-reverse',\n      alignItems: 'flex-start'\n    }\n  },\n  product: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  productImage: {\n    marginRight: theme.spacing(1),\n    height: 48,\n    width: 48\n  },\n  details: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    }\n  },\n  notice: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction Subscription({ className, ...rest }) {\n  const classes = useStyles();\n  const [subscription, setSubscription] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchSubscription = () => {\n      axios.get('/api/account/subscription').then((response) => {\n        if (mounted) {\n          setSubscription(response.data.subscription);\n        }\n      });\n    };\n\n    fetchSubscription();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!subscription) {\n    return null;\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={(\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n          >\n            Upgrade plan\n          </Button>\n        )}\n        classes={{ action: classes.action }}\n        title=\"Manage your subscription\"\n      />\n      <Divider />\n      <CardContent>\n        <Card>\n          <CardContent className={classes.overview}>\n            <div>\n              <Typography\n                display=\"inline\"\n                variant=\"h4\"\n              >\n                {subscription.currency}\n                {subscription.price}\n              </Typography>\n              <Typography\n                display=\"inline\"\n                variant=\"subtitle1\"\n              >\n                /mo\n              </Typography>\n            </div>\n            <div className={classes.product}>\n              <img\n                alt=\"Product\"\n                className={classes.productImage}\n                src=\"/images/products/product_freelancer.svg\"\n              />\n              <Typography variant=\"overline\">{subscription.name}</Typography>\n            </div>\n          </CardContent>\n          <Divider />\n          <CardContent className={classes.details}>\n            <div>\n              <Typography variant=\"body1\">\n                {`${subscription.proposalsLeft} proposals left`}\n              </Typography>\n              <Typography variant=\"body1\">\n                {`${subscription.templatesLeft} templates`}\n              </Typography>\n            </div>\n            <div>\n              <Typography variant=\"body1\">\n                {`${subscription.invitesLeft} invites left`}\n              </Typography>\n              <Typography variant=\"body1\">\n                {`${subscription.adsLeft} ads left`}\n              </Typography>\n            </div>\n            <div>\n              {subscription.hasAnalytics && (\n                <Typography variant=\"body1\">Analytics dashboard</Typography>\n              )}\n              {subscription.hasEmailAlerts && (\n                <Typography variant=\"body1\">Email alerts</Typography>\n              )}\n            </div>\n          </CardContent>\n          <Divider />\n        </Card>\n        <Typography\n          className={classes.notice}\n          variant=\"body2\"\n        >\n          The refunds don&apos;t work once you have the subscription, but you can\n          always\n          {' '}\n          <Link\n            color=\"secondary\"\n            component={RouterLink}\n            to=\"#\"\n          >\n            Cancel your subscription\n          </Link>\n          .\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nSubscription.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Subscription;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Button,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  saveButton: {\n    color: theme.palette.common.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nfunction Notifications({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Notifications\" />\n      <Divider />\n      <CardContent>\n        <form>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                System\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                )}\n                label=\"Email alerts\"\n              />\n              <FormControlLabel\n                control={<Checkbox color=\"primary\" />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                )}\n                label=\"Text message\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                )}\n                label={(\n                  <>\n                    <Typography variant=\"body1\">Phone calls</Typography>\n                    <Typography variant=\"caption\">\n                      Short voice phone updating you\n                    </Typography>\n                  </>\n                )}\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n              >\n                Chat App\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                )}\n                label=\"Email\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox\n                    color=\"primary\"\n                    defaultChecked //\n                  />\n                )}\n                label=\"Push notifications\"\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          className={classes.saveButton}\n          variant=\"contained\"\n        >\n          Save changes\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Button,\n  Divider,\n  TextField,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  saveButton: {\n    color: theme.palette.common.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nfunction Security({ className, ...rest }) {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const valid = values.password && values.password === values.confirm;\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Change password\" />\n      <Divider />\n      <CardContent>\n        <form>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Security\"\n                name=\"password\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.password}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Confirm password\"\n                name=\"confirm\"\n                onChange={handleChange}\n                type=\"password\"\n                value={values.confirm}\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          className={classes.saveButton}\n          disabled={!valid}\n          variant=\"contained\"\n        >\n          Save changes\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nSecurity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Security;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Container,\n  Tabs,\n  Tab,\n  Divider,\n  colors\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport General from './General';\nimport Subscription from './Subscription';\nimport Notifications from './Notifications';\nimport Security from './Security';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\n\nfunction Settings({ match, history }) {\n  const classes = useStyles();\n  const { tab: currentTab } = match.params;\n  const tabs = [\n    { value: 'general', label: 'General' },\n    { value: 'subscription', label: 'Subscription' },\n    { value: 'notifications', label: 'Notifications' },\n    { value: 'security', label: 'Security' }\n  ];\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  if (!currentTab) {\n    return <Redirect to=\"/settings/general\" />;\n  }\n\n  if (!tabs.find((tab) => tab.value === currentTab)) {\n    return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Tabs\n          className={classes.tabs}\n          onChange={handleTabsChange}\n          scrollButtons=\"auto\"\n          value={currentTab}\n          variant=\"scrollable\"\n        >\n          {tabs.map((tab) => (\n            <Tab\n              key={tab.value}\n              label={tab.label}\n              value={tab.value}\n            />\n          ))}\n        </Tabs>\n        <Divider className={classes.divider} />\n        <div className={classes.content}>\n          {currentTab === 'general' && <General />}\n          {currentTab === 'subscription' && <Subscription />}\n          {currentTab === 'notifications' && <Notifications />}\n          {currentTab === 'security' && <Security />}\n        </div>\n      </Container>\n    </Page>\n  );\n}\n\nSettings.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default Settings;\n"],"sourceRoot":""}