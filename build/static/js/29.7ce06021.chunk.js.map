{"version":3,"sources":["views/CustomerManagementList/Header.js","views/CustomerManagementList/Results.js","views/CustomerManagementList/index.js","../node_modules/@material-ui/icons/StarBorder.js","../node_modules/@material-ui/icons/Star.js","components/ReviewStars.js"],"names":["useStyles","makeStyles","root","Header","className","rest","classes","clsx","Grid","alignItems","container","justify","spacing","item","Typography","component","gutterBottom","variant","Button","color","theme","content","padding","inner","minWidth","nameCell","display","avatar","height","width","marginRight","actions","justifyContent","Results","customers","useState","selectedCustomers","setSelectedCustomers","page","setPage","rowsPerPage","setRowsPerPage","length","Math","ceil","Card","CardHeader","action","GenericMoreButton","title","Divider","CardContent","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","onChange","event","target","map","customer","id","align","TableBody","slice","hover","key","selected","indexOf","selectedIndex","newSelectedCustomers","concat","handleSelectOne","value","Avatar","src","getInitials","name","Link","RouterLink","to","email","location","currency","spent","type","projects","ReviewStars","rating","size","CardActions","TablePagination","count","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","TableEditBar","defaultProps","paddingTop","paddingBottom","results","marginTop","CustomerManagementList","setCustomers","useEffect","mounted","axios","get","then","response","data","Page","Container","maxWidth","SearchBar","onFilter","onSearch","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","starIcon","fontSize","starFilledIcon","colors","amber","starBorderIcon","palette","icon","starCount","starNodes","i","uuid","starNode","push"],"mappings":"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","file":"static/js/29.7ce06021.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Customers\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Add customer\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Button,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\nimport ReviewStars from 'src/components/ReviewStars';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport TableEditBar from 'src/components/TableEditBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nfunction Results({ className, customers, ...rest }) {\n  const classes = useStyles();\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = (event) => {\n    const selectedCustomers = event.target.checked\n      ? customers.map((customer) => customer.id)\n      : [];\n\n    setSelectedCustomers(selectedCustomers);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomers.indexOf(id);\n    let newSelectedCustomers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(1)\n      );\n    } else if (selectedIndex === selectedCustomers.length - 1) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, -1)\n      );\n    } else if (selectedIndex > 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, selectedIndex),\n        selectedCustomers.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomers(newSelectedCustomers);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {customers.length}\n        {' '}\n        Records found. Page\n        {' '}\n        {page + 1}\n        {' '}\n        of\n        {' '}\n        {Math.ceil(customers.length / rowsPerPage)}\n      </Typography>\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"All customers\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedCustomers.length === customers.length}\n                        color=\"primary\"\n                        indeterminate={\n                          selectedCustomers.length > 0\n                          && selectedCustomers.length < customers.length\n                        }\n                        onChange={handleSelectAll}\n                      />\n                    </TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Location</TableCell>\n                    <TableCell>Money spent</TableCell>\n                    <TableCell>Type</TableCell>\n                    <TableCell>Projects held</TableCell>\n                    <TableCell>Reviews</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {customers.slice(0, rowsPerPage).map((customer) => (\n                    <TableRow\n                      hover\n                      key={customer.id}\n                      selected={selectedCustomers.indexOf(customer.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={\n                            selectedCustomers.indexOf(customer.id) !== -1\n                          }\n                          color=\"primary\"\n                          onChange={(event) => handleSelectOne(event, customer.id)}\n                          value={selectedCustomers.indexOf(customer.id) !== -1}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <div className={classes.nameCell}>\n                          <Avatar\n                            className={classes.avatar}\n                            src={customer.avatar}\n                          >\n                            {getInitials(customer.name)}\n                          </Avatar>\n                          <div>\n                            <Link\n                              color=\"inherit\"\n                              component={RouterLink}\n                              to=\"/management/customers/1\"\n                              variant=\"h6\"\n                            >\n                              {customer.name}\n                            </Link>\n                            <div>{customer.email}</div>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>{customer.location}</TableCell>\n                      <TableCell>\n                        {customer.currency}\n                        {customer.spent}\n                      </TableCell>\n                      <TableCell>{customer.type}</TableCell>\n                      <TableCell>{customer.projects}</TableCell>\n                      <TableCell>\n                        <ReviewStars value={customer.rating} />\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to=\"/management/customers/1\"\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={customers.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      <TableEditBar selected={selectedCustomers} />\n    </div>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array\n};\n\nResults.defaultProps = {\n  customers: []\n};\n\nexport default Results;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Container } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport Page from 'src/components/Page';\nimport SearchBar from 'src/components/SearchBar';\nimport Header from './Header';\nimport Results from './Results';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nfunction CustomerManagementList() {\n  const classes = useStyles();\n  const [customers, setCustomers] = useState([]);\n\n  const handleFilter = () => {};\n\n  const handleSearch = () => {};\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchCustomers = () => {\n      axios.get('/api/management/customers').then((response) => {\n        if (mounted) {\n          setCustomers(response.data.customers);\n        }\n      });\n    };\n\n    fetchCustomers();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customer Management List\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n        <SearchBar\n          onFilter={handleFilter}\n          onSearch={handleSearch}\n        />\n        {customers && (\n          <Results\n            className={classes.results}\n            customers={customers}\n          />\n        )}\n      </Container>\n    </Page>\n  );\n}\n\nexport default CustomerManagementList;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z\"\n}), 'StarBorder');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Star');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\nimport { colors } from '@material-ui/core';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center'\n  },\n  starIcon: {\n    fontSize: 18,\n    height: 18,\n    width: 18\n  },\n  starFilledIcon: {\n    color: colors.amber[400]\n  },\n  starBorderIcon: {\n    color: theme.palette.icon\n  }\n}));\n\nfunction ReviewStars({\n  value,\n  starCount,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const starNodes = [];\n\n  for (let i = 1; i <= starCount; i++) {\n    const key = uuid();\n\n    const starNode = i <= value ? (\n      <StarIcon\n        className={clsx(classes.starIcon, classes.starFilledIcon)}\n        key={key}\n      />\n    ) : (\n      <StarBorderIcon\n        className={clsx(classes.starIcon, classes.starBorderIcon)}\n        key={key}\n      />\n    );\n\n    starNodes.push(starNode);\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {starNodes}\n    </div>\n  );\n}\n\nReviewStars.propTypes = {\n  className: PropTypes.string,\n  starCount: PropTypes.number,\n  value: PropTypes.number\n};\n\nReviewStars.defaultProps = {\n  value: 0,\n  starCount: 5\n};\n\nexport default ReviewStars;\n"],"sourceRoot":""}