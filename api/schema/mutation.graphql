# mutations can modify the db. executed sequentially.

input UploadFileMeta {
  fileType: String!
  contentLength: Int!
}

type UploadFileResp {
  url: String!
  successToken: String!
}

input UploadFileSuccess {
  successToken: String!
}

type Mutation {
  adminLogin(input: AdminLogin!): AuthToken
  managerLogin(input: ManagerLogin!): AuthToken
  delegateLogin(input: DelegateLogin!): AuthToken
  createManager(input: CreateManagerInput!): Manager
  updateManager(input: UpdateManagerInput!): Manager
  profileImageUploadRequest(input: UploadFileMeta!): UploadFileResp
  updateManagerProfileImage(input: UploadFileSuccess!): Manager
  deleteManager(input: DeleteManagerInput!): Boolean!
  createAdmin(input: CreateAdminInput!): Admin
  updateAdmin(input: UpdateAdminInput!): Admin
  deleteAdmin(input: DeleteAdminInput!): Boolean!
  createDelegate(input: CreateDelegateInput!): CreateDelegateResponse
  createCompany(input: CreateCompanyInput!): Company
  updateCompany(input: UpdateCompanyInput!): Company
  createCompanyRequest(
    company: CreateCompanyInput!
    manager: CreateManagerInput!
    recaptcha: String!
  ): Boolean!
  approveCompany(uuid: UUID!): Company
  saveOnlineCourse(input: SaveOnlineCourseInput!): Course
  saveClassroomCourse(input: SaveClassroomCourseInput!): Course
  createTag(input: CreateTagInput!): Tag
  createCategory(input: CreateCategoryInput!): Category
  createLesson(input: CreateLessonInput!): Lesson
  purchaseCourses(input: PurchaseCoursesInput!): PurchaseCoursesResponse
  createIndividual(input: CreateIndividualInput!): CreateIndividualResponse
  # submitTest(input: AnswerTest!): SubmitTestPayload
  # createTest(input: CreateTestInput!): CreateTestPayload
  # updateTest(input: UpdateTestInput!): UpdateTestPayload
}
