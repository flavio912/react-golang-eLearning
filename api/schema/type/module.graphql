type Module implements SyllabusItem {
  uuid: UUID!
  name: String!
  type: StructureElement!
  bannerImageURL: String
  description: String!
  transcript: String!
  voiceoverURL: String
  video: Video
  syllabus: [SyllabusItem!]
  complete: Boolean
}

enum VideoType {
  WISTIA
}

type Video {
  type: VideoType!
  url: String!
}

input VideoInput {
  type: VideoType!
  url: String!
}

enum ModuleElement {
  test
  lesson
}

input ModuleItem {
  type: ModuleElement!
  uuid: UUID!
}

input CreateModuleInput {
  name: String!
  tags: [UUID!]
  description: String!
  transcript: String!
  bannerImageSuccessToken: String
  voiceoverSuccessToken: String
  video: VideoInput
  syllabus: [ModuleItem!]
}

type CreateModulePayload {
  module: Module
}

input UpdateModuleInput {
  uuid: UUID!
  tags: [UUID!]
  name: String
  description: String
  transcript: String
  bannerImageSuccessToken: String
  voiceoverSuccessToken: String
  video: VideoInput
  syllabus: [ModuleItem!]
}

type UpdateModulePayload {
  module: Module
}

input DeleteModuleInput {
  uuid: UUID!
}
type ModulePage implements PaginatedQuery {
  edges: [Module]
  pageInfo: PageInfo
}

input ModuleFilter {
  uuid: UUID
  name: String
  description: String
}
