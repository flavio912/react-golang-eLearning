# queries should not modify the db. executed in parrallel
type PageInfo {
  total: Int! # Number of pages after this one
  offset: Int! # The offset of this page from the start
  limit: Int! # The max shown per page
  given: Int! # Number of items given
}

input Page {
  offset: Int
  limit: Int
}

input ManagerFilter {
  name: String
  email: String
  jobTitle: String
  uuid: UUID
  telephone: String
}

input DelegateFilter {
  uuid: UUID
  ttc_id: String
  name: String
  email: String
  jobTitle: String
  telephone: String
}

input CourseInfoFilter {
  name: String
  accessType: AccessType
  backgroundCheck: Boolean
  price: Float
}

input OnlineCourseFilter {
  courseInfo: CourseInfoFilter
}

input ClassroomCourseFilter {
  courseInfo: CourseInfoFilter
}

input CompanyFilter {
  uuid: UUID
  name: String
}

interface PaginatedQuery {
  pageInfo: PageInfo
}

input OrderBy {
  ascending: Boolean
  field: String!
}

type Query {
  info: String!
  admin(uuid: UUID!): Admin
  admins(page: Page): AdminPage!
  manager(uuid: UUID): Manager
  managers(page: Page, filter: ManagerFilter, orderBy: OrderBy): ManagerPage
  delegate(uuid: UUID!): Delegate
  delegates(page: Page, filter: DelegateFilter, orderBy: OrderBy): DelegatePage
  company(uuid: UUID!): Company
  companies(page: Page, filter: CompanyFilter, orderBy: OrderBy): CompanyPage
  lesson(uuid: UUID!): Lesson
  onlineCourses(
    page: Page
    filter: OnlineCourseFilter
    orderBy: OrderBy
  ): OnlineCoursePage
  classroomCourses(
    page: Page
    filter: ClassroomCourseFilter
    orderBy: OrderBy
  ): ClassroomCoursePage
}
