{"version":3,"sources":["../node_modules/@material-ui/core/esm/Switch/Switch.js","views/CustomerManagementDetails/Summary/CustomerEditModal.js","../node_modules/@material-ui/icons/DeleteOutline.js","../node_modules/@material-ui/icons/PersonOutline.js","../node_modules/@material-ui/icons/MailOutline.js","../node_modules/@material-ui/icons/NotInterested.js","views/CustomerManagementDetails/Header.js","views/CustomerManagementDetails/Summary/CustomerInfo.js","views/CustomerManagementDetails/Summary/Invoices.js","views/CustomerManagementDetails/Summary/SendEmails.js","views/CustomerManagementDetails/Summary/OtherActions.js","views/CustomerManagementDetails/Summary/index.js","views/CustomerManagementDetails/Invoices.js","views/CustomerManagementDetails/Logs.js","views/CustomerManagementDetails/index.js","../node_modules/@material-ui/icons/Edit.js"],"names":["Switch","React","props","ref","classes","className","_props$color","color","_props$edge","edge","_props$size","size","other","_objectWithoutProperties","icon","thumb","clsx","root","edgeStart","edgeEnd","concat","capitalize","SwitchBase","_extends","type","checkedIcon","switchBase","input","checked","disabled","track","withStyles","theme","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","marginLeft","marginRight","top","left","palette","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","name","useStyles","makeStyles","outline","maxHeight","overflowY","maxWidth","actions","justifyContent","CustomerEditModal","open","onClose","customer","rest","useState","values","setValues","handleFieldChange","event","persist","currentValues","target","value","title","container","spacing","item","md","xs","fullWidth","label","onChange","email","variant","phone","state","country","address1","address2","verified","discountedPrices","onClick","defaultProps","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","Header","Typography","component","gutterBottom","content","flexDirection","alignItems","buttonIcon","CustomerInfo","openEdit","setOpenEdit","Card","CardHeader","Divider","CardContent","Table","TableBody","TableRow","TableCell","Label","colors","green","orange","selected","CardActions","Button","getSum","invoices","filtered","filter","invoice","total","reduce","toFixed","Invoices","paidInvoices","paidTotal","draftInvoices","draftTotal","dueInvoices","dueTotal","refundedInvoices","refundedTotal","incomeInvoices","incomeTotal","iban","autoCC","red","length","currency","sendButton","marginTop","mailIcon","table","cell","options","SendEmails","option","setOption","TextField","select","SelectProps","native","map","key","emails","id","moment","created_at","format","description","mainActions","notice","deleteButton","error","dark","OtherActions","Summary","setCustomer","useEffect","mounted","axios","get","then","response","data","summary","Grid","lg","xl","inner","minWidth","setInvoices","statusColors","pending","paid","rejected","GenericMoreButton","TableHead","align","split","shift","date","paymentMethod","status","RouterLink","to","methodCell","statusCell","Logs","logs","setLogs","suppressScrollY","log","method","route","desc","IP","paddingTop","paddingBottom","tabs","divider","CustomerManagementDetails","match","history","params","currentTab","tab","find","Page","Container","Tabs","push","scrollButtons","Tab"],"mappings":"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","file":"static/js/9.191d72ba.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Modal,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Grid,\n  Divider,\n  Typography,\n  TextField,\n  Switch,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    outline: 'none',\n    boxShadow: theme.shadows[20],\n    width: 700,\n    maxHeight: '100%',\n    overflowY: 'auto',\n    maxWidth: '100%'\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nfunction CustomerEditModal({\n  open, onClose, customer, className, ...rest\n}) {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    ...customer\n  });\n\n  const handleFieldChange = (event) => {\n    event.persist();\n    setValues((currentValues) => ({\n      ...currentValues,\n      [event.target.name]:\n        event.target.type === 'checkbox'\n          ? event.target.checked\n          : event.target.value\n    }));\n  };\n\n  if (!open) {\n    return null;\n  }\n\n  return (\n    <Modal\n      onClose={onClose}\n      open={open}\n    >\n      <Card\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        <form>\n          <CardHeader title=\"Edit Customer\" />\n          <Divider />\n          <CardContent>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Email address\"\n                  name=\"email\"\n                  onChange={handleFieldChange}\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Full name\"\n                  name=\"name\"\n                  onChange={handleFieldChange}\n                  value={values.name}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Phone number\"\n                  name=\"phone\"\n                  onChange={handleFieldChange}\n                  value={values.phone}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"State/Region\"\n                  name=\"state\"\n                  onChange={handleFieldChange}\n                  value={values.state}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Country\"\n                  name=\"country\"\n                  onChange={handleFieldChange}\n                  value={values.country}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Address 1\"\n                  name=\"address1\"\n                  onChange={handleFieldChange}\n                  value={values.address1}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Address 2\"\n                  name=\"address2\"\n                  onChange={handleFieldChange}\n                  value={values.address2}\n                  variant=\"outlined\"\n                />\n              </Grid>\n              <Grid item />\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <Typography variant=\"h5\">Email Verified</Typography>\n                <Typography variant=\"body2\">\n                  Disabling this will automatically send the user a verification\n                  email\n                </Typography>\n                <Switch\n                  checked={values.verified}\n                  color=\"secondary\"\n                  edge=\"start\"\n                  name=\"verified\"\n                  onChange={handleFieldChange}\n                  value={values.verified}\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <Typography variant=\"h5\">Discounted Prices</Typography>\n                <Typography variant=\"body2\">\n                  This will give the user discountedprices for all products\n                </Typography>\n                <Switch\n                  checked={values.discountedPrices}\n                  color=\"secondary\"\n                  edge=\"start\"\n                  name=\"discountedPrices\"\n                  onChange={handleFieldChange}\n                  value={values.discountedPrices}\n                />\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Divider />\n          <CardActions className={classes.actions}>\n            <Button onClick={onClose}>\n              Close\n            </Button>\n            <Button\n              color=\"primary\"\n              onClick={onClose}\n              variant=\"contained\"\n            >\n              Save\n            </Button>\n          </CardActions>\n        </form>\n      </Card>\n    </Modal>\n  );\n}\n\nCustomerEditModal.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nCustomerEditModal.defaultProps = {\n  open: false,\n  onClose: () => {}\n};\n\nexport default CustomerEditModal;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 5.9c1.16 0 2.1.94 2.1 2.1s-.94 2.1-2.1 2.1S9.9 9.16 9.9 8s.94-2.1 2.1-2.1m0 9c2.97 0 6.1 1.46 6.1 2.1v1.1H5.9V17c0-.64 3.13-2.1 6.1-2.1M12 4C9.79 4 8 5.79 8 8s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 9c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"\n}), 'PersonOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n}), 'NotInterested');\n\nexports.default = _default;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\nimport Label from 'src/components/Label';\nimport CustomerEditModal from './CustomerEditModal';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction CustomerInfo({ customer, className, ...rest }) {\n  const classes = useStyles();\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  }\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer.email}\n                <div>\n                  <Label\n                    color={\n                      customer.verified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    {customer.verified\n                      ? 'Email verified'\n                      : 'Email not verified'}\n                  </Label>\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Phone</TableCell>\n              <TableCell>{customer.phone}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>State/Region</TableCell>\n              <TableCell>{customer.state}</TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Country</TableCell>\n              <TableCell>{customer.country}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Address 1</TableCell>\n              <TableCell>{customer.address1}</TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Address 2</TableCell>\n              <TableCell>{customer.address2}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions>\n      <CustomerEditModal\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      />\n    </Card>\n  );\n}\n\nCustomerInfo.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default CustomerInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport ReceiptIcon from '@material-ui/icons/ReceiptOutlined';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst getSum = (invoices, type) => {\n  const filtered = invoices.filter(invoice => invoice.type === type);\n  const total = filtered\n    .reduce((total, invoice) => total + invoice.value, 0)\n    .toFixed(2);\n\n  return [filtered, total];\n};\n\nfunction Invoices({ customer, className, ...rest }) {\n  const classes = useStyles();\n  const [paidInvoices, paidTotal] = getSum(customer.invoices, 'paid');\n  const [draftInvoices, draftTotal] = getSum(customer.invoices, 'draft');\n  const [dueInvoices, dueTotal] = getSum(customer.invoices, 'due');\n  const [refundedInvoices, refundedTotal] = getSum(\n    customer.invoices,\n    'refunded'\n  );\n  const [incomeInvoices, incomeTotal] = getSum(customer.invoices, 'income');\n\n  const handleEditOpen = () => {}\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Invoices/Billing\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow>\n              <TableCell>Auto CC Pay</TableCell>\n              <TableCell>\n                {customer.iban}\n                <div>\n                  <Label\n                    color={\n                      customer.autoCC ? colors.green[600] : colors.red[600]\n                    }\n                  >\n                    {customer.autoCC ? 'YES' : 'NO'}\n                  </Label>\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Paid</TableCell>\n              <TableCell>\n                {paidInvoices.length} ({customer.currency}\n                {paidTotal})\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Draft</TableCell>\n              <TableCell>\n                {draftInvoices.length} ({customer.currency}\n                {draftTotal})\n              </TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Unpaid/Due</TableCell>\n              <TableCell>\n                {dueInvoices.length} ({customer.currency}\n                {dueTotal})\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Refunded</TableCell>\n              <TableCell>\n                {refundedInvoices.length} ({customer.currency}\n                {refundedTotal})\n              </TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Gross Income</TableCell>\n              <TableCell>\n                {incomeInvoices.length} ({customer.currency}\n                {incomeTotal})\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <AttachMoneyIcon className={classes.buttonIcon} />\n          Create Invoice\n        </Button>\n        <Button>\n          <ReceiptIcon className={classes.buttonIcon} />\n          Generate Due Invoices\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nInvoices.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default Invoices;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell\n} from '@material-ui/core';\nimport MaiIcon from '@material-ui/icons/MailOutline';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {},\n  sendButton: {\n    marginTop: theme.spacing(2)\n  },\n  mailIcon: {\n    marginRight: theme.spacing(1)\n  },\n  table: {\n    marginTop: theme.spacing(2)\n  },\n  cell: {\n    padding: theme.spacing(1)\n  }\n}));\n\nconst options = [\n  'Resend last invoice',\n  'Send password reset',\n  'Send verification'\n];\n\nfunction SendEmails({ customer, className, ...rest }) {\n  const classes = useStyles();\n  const [option, setOption] = useState(options[0]);\n\n  const handleChange = (event) => {\n    event.persist();\n    setOption(event.target.value);\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Send emails\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <TextField\n          fullWidth\n          name=\"option\"\n          onChange={handleChange}\n          select\n          // eslint-disable-next-line react/jsx-sort-props\n          SelectProps={{ native: true }}\n          value={option}\n          variant=\"outlined\"\n        >\n          {options.map(option => (\n            <option\n              key={option}\n              value={option}\n            >\n              {option}\n            </option>\n          ))}\n        </TextField>\n        <Button\n          className={classes.sendButton}\n          variant=\"contained\"\n        >\n          <MaiIcon className={classes.mailIcon} />\n          Send email\n        </Button>\n        <Table className={classes.table}>\n          <TableBody>\n            {customer.emails.map(email => (\n              <TableRow key={email.id}>\n                <TableCell className={classes.cell}>\n                  {moment(email.created_at).format('DD/MM/YYYY | HH:MM')}\n                </TableCell>\n                <TableCell className={classes.cell}>\n                  {email.description}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  );\n}\n\nSendEmails.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default SendEmails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Button,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport DeleteIcon from '@material-ui/icons/DeleteOutline';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  mainActions: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  },\n  notice: {\n    marginTop: theme.spacing(1)\n  },\n  deleteButton: {\n    marginTop: theme.spacing(1),\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: theme.palette.error.dark\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction OtherActions({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Other actions\" />\n      <Divider />\n      <CardContent>\n        <div className={classes.mainActions}>\n          <Button>\n            <NotInterestedIcon className={classes.buttonIcon} />\n            Close Customer Account\n          </Button>\n          <Button>\n            <GetAppIcon className={classes.buttonIcon} />\n            Export client data\n          </Button>\n        </div>\n        <Typography\n          className={classes.notice}\n          variant=\"body2\"\n        >\n          Remove this this customer’s data if he requested that, if not please\n          be aware that what has been deleted can never brough back\n        </Typography>\n        <Button className={classes.deleteButton}>\n          <DeleteIcon className={classes.buttonIcon} />\n          Delete Customer Account\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n\nOtherActions.propTypes = {\n  className: PropTypes.string\n};\n\nexport default OtherActions;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport CustomerInfo from './CustomerInfo';\nimport Invoices from './Invoices';\nimport SendEmails from './SendEmails';\nimport OtherActions from './OtherActions';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Summary({ className, ...rest }) {\n  const classes = useStyles();\n  const [customer, setCustomer] = useState();\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchCustomer = () => {\n      axios.get('/api/management/customers/1/summary').then(response => {\n        if (mounted) {\n          setCustomer(response.data.summary);\n        }\n      });\n    }\n\n    fetchCustomer();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <Grid\n      {...rest}\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <CustomerInfo customer={customer} />\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <Invoices customer={customer} />\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <SendEmails customer={customer} />\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <OtherActions />\n      </Grid>\n    </Grid>\n  );\n}\n\nSummary.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Summary;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nfunction Invoices({ className, ...rest }) {\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      axios.get('/api/management/customers/1/invoices').then(response => {\n        if (mounted) {\n          setInvoices(response.data.invoices);\n        }\n      });\n    }\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  methodCell: {\n    width: 100\n  },\n  statusCell: {\n    width: 64\n  }\n}));\n\nfunction Logs({ className, ...rest }) {\n  const classes = useStyles();\n  const [logs, setLogs] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchLogs = () => {\n      axios.get('/api/management/customers/1/logs').then(response => {\n        if (mounted) {\n          setLogs(response.data.logs);\n        }\n      });\n    }\n\n    fetchLogs();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader title=\"Customer logs\" />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar options={{ suppressScrollY: true }}>\n            <div className={classes.inner}>\n              <Table>\n                <TableBody>\n                  {logs.map(log => (\n                    <TableRow key={log.id}>\n                      <TableCell className={classes.methodCell}>\n                        <Typography variant=\"h6\">{log.method}</Typography>\n                      </TableCell>\n                      <TableCell className={classes.statusCell}>\n                        <Label\n                          color={\n                            log.status === 200\n                              ? colors.green[600]\n                              : colors.red[600]\n                          }\n                        >\n                          {log.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell>{log.route}</TableCell>\n                      <TableCell>{log.desc}</TableCell>\n                      <TableCell align=\"right\">{log.IP}</TableCell>\n                      <TableCell align=\"right\">\n                        {moment(log.created_at).format('YYYY/MM/DD | hh:mm:ss')}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nLogs.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Logs;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Container,\n  Tabs,\n  Tab,\n  Divider,\n  colors\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Summary from './Summary';\nimport Invoices from './Invoices';\nimport Logs from './Logs';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nfunction CustomerManagementDetails({ match, history }) {\n  const classes = useStyles();\n  const { id, tab: currentTab } = match.params;\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  if (!currentTab) {\n    return <Redirect to={`/management/customers/${id}/summary`} />;\n  }\n\n  if (!tabs.find((tab) => tab.value === currentTab)) {\n    return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customer Management Details\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n        <Tabs\n          className={classes.tabs}\n          onChange={handleTabsChange}\n          scrollButtons=\"auto\"\n          value={currentTab}\n          variant=\"scrollable\"\n        >\n          {tabs.map((tab) => (\n            <Tab\n              key={tab.value}\n              label={tab.label}\n              value={tab.value}\n            />\n          ))}\n        </Tabs>\n        <Divider className={classes.divider} />\n        <div className={classes.content}>\n          {currentTab === 'summary' && <Summary />}\n          {currentTab === 'invoices' && <Invoices />}\n          {currentTab === 'logs' && <Logs />}\n        </div>\n      </Container>\n    </Page>\n  );\n}\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;"],"sourceRoot":""}