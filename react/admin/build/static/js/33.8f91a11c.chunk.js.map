{"version":3,"sources":["components/Paginate.js","views/ProjectList/Filter/MultiSelect.js","views/ProjectList/Filter/index.js","views/ProjectList/Header.js","views/ProjectList/Results.js","views/ProjectList/index.js"],"names":["useStyles","makeStyles","theme","root","typography","button","listStyle","userSelect","display","alignItems","active","activeLink","break","breakLink","disabled","next","marginLeft","spacing","nextLink","padding","outline","cursor","borderRadius","backgroundColor","colors","blueGrey","page","pageLink","color","palette","text","secondary","width","height","textAlign","primary","previous","marginRight","previousLink","Paginate","pageCount","pageRangeDisplayed","onPageChange","className","rest","classes","activeClassName","activeLinkClassName","breakClassName","breakLabel","breakLinkClassName","containerClassName","clsx","disabledClassName","marginPagesDisplayed","nextClassName","nextLabel","nextLinkClassName","pageClassName","pageLinkClassName","previousClassName","previousLabel","previousLinkClassName","subContainerClassName","defaultProps","menuItem","formControlLabel","margin","MultiSelect","label","options","value","onChange","anchorRef","useRef","useState","openMenu","setOpenMenu","handleOptionToggle","event","newValue","target","checked","push","filter","item","Button","onClick","ref","Menu","anchorEl","current","menu","onClose","open","elevation","PaperProps","style","map","option","MenuItem","key","FormControlLabel","control","Checkbox","indexOf","keywords","searchIcon","icon","chips","flexWrap","chip","selects","grey","inNetwork","Filter","inputValue","setInputValue","setChips","handleMultiSelectChange","Card","Input","disableUnderline","persist","onKeyUp","keyCode","includes","prevChips","placeholder","Divider","Chip","onDelete","prevChip","handleChipDelete","select","defaultChecked","addIcon","Header","Grid","container","justify","Typography","component","gutterBottom","variant","RouterLink","to","header","justifyContent","marginBottom","title","position","bottom","left","content","main","actions","sortButton","textTransform","letterSpacing","paginate","marginTop","Projects","sortRef","openSort","setOpenSort","selectedSort","setSelectedSort","mode","setMode","projects","setProjects","useEffect","mounted","axios","get","then","response","data","length","ToggleButtonGroup","exclusive","size","ToggleButton","project","id","md","sm","xs","ProjectCard","ListItemText","paddingTop","paddingBottom","results","ProjectList","Page","Container","maxWidth","Results"],"mappings":"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","file":"static/js/33.8f91a11c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { colors } from '@material-ui/core';\nimport ReactPaginate from 'react-paginate';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    ...theme.typography.button,\n    listStyle: 'none',\n    userSelect: 'none',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  active: {},\n  activeLink: {},\n  break: {},\n  breakLink: {},\n  disabled: {},\n  next: {\n    marginLeft: theme.spacing(1)\n  },\n  nextLink: {\n    padding: '6px 16px',\n    outline: 'none',\n    cursor: 'pointer',\n    borderRadius: 4,\n    '&:hover': {\n      backgroundColor: colors.blueGrey[50]\n    }\n  },\n  page: {},\n  pageLink: {\n    color: theme.palette.text.secondary,\n    padding: theme.spacing(1),\n    outline: 'none',\n    cursor: 'pointer',\n    width: 40,\n    height: 40,\n    borderRadius: '50%',\n    display: 'block',\n    textAlign: 'center',\n    '&:hover': {\n      backgroundColor: colors.blueGrey[50],\n      color: theme.palette.text.primary\n    },\n    '&$activeLink': {\n      backgroundColor: colors.blueGrey[50],\n      color: theme.palette.text.primary\n    }\n  },\n  previous: {\n    marginRight: theme.spacing(1)\n  },\n  previousLink: {\n    padding: '6px 16px',\n    outline: 'none',\n    cursor: 'pointer',\n    borderRadius: 4,\n    '&:hover': {\n      backgroundColor: colors.blueGrey[50]\n    }\n  }\n}));\n\nfunction Paginate({\n  pageCount,\n  pageRangeDisplayed,\n  onPageChange,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <ReactPaginate\n      activeClassName={classes.active}\n      activeLinkClassName={classes.activeLink}\n      breakClassName={classes.break}\n      breakLabel=\"...\"\n      breakLinkClassName={classes.breakLink}\n      containerClassName={clsx(classes.root, className)}\n      disabledClassName={classes.disabled}\n      marginPagesDisplayed={2}\n      nextClassName={classes.next}\n      nextLabel=\"next\"\n      nextLinkClassName={classes.nextLink}\n      onPageChange={onPageChange}\n      pageClassName={classes.page}\n      pageCount={pageCount}\n      pageLinkClassName={classes.pageLink}\n      pageRangeDisplayed={pageRangeDisplayed}\n      previousClassName={classes.previous}\n      previousLabel=\"previous\"\n      previousLinkClassName={classes.previousLink}\n      subContainerClassName=\"pages pagination\"\n      {...rest}\n    />\n  );\n}\n\nPaginate.propTypes = {\n  className: PropTypes.string,\n  onPageChange: PropTypes.func,\n  pageCount: PropTypes.number,\n  pageRangeDisplayed: PropTypes.number\n};\n\nPaginate.defaultProps = {\n  onPageChange: () => {},\n  pageCount: 3,\n  pageRangeDisplayed: 5\n};\n\nexport default Paginate;\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Menu,\n  MenuItem\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  menuItem: {\n    padding: 0\n  },\n  formControlLabel: {\n    padding: theme.spacing(0.5, 2),\n    width: '100%',\n    margin: 0\n  }\n}));\n\nfunction MultiSelect({\n  label, options, value, onChange\n}) {\n  const classes = useStyles();\n  const anchorRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  const handleOptionToggle = (event) => {\n    let newValue = [...value];\n\n    if (event.target.checked) {\n      newValue.push(event.target.value);\n    } else {\n      newValue = newValue.filter((item) => item !== event.target.value);\n    }\n\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        onClick={handleMenuOpen}\n        ref={anchorRef}\n      >\n        {label}\n        <ArrowDropDownIcon />\n      </Button>\n      <Menu\n        anchorEl={anchorRef.current}\n        className={classes.menu}\n        onClose={handleMenuClose}\n        open={openMenu}\n        elevation={1}\n        // eslint-disable-next-line react/jsx-sort-props\n        PaperProps={{ style: { width: 250 } }}\n      >\n        {options.map((option) => (\n          <MenuItem\n            className={classes.menuItem}\n            key={option}\n          >\n            <FormControlLabel\n              className={classes.formControlLabel}\n              control={(\n                <Checkbox\n                  checked={value.indexOf(option) > -1}\n                  color=\"primary\"\n                  onClick={handleOptionToggle}\n                  value={option}\n                />\n              )}\n              label={option}\n            />\n          </MenuItem>\n        ))}\n      </Menu>\n    </>\n  );\n}\n\nMultiSelect.propTypes = {\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  options: PropTypes.array.isRequired,\n  value: PropTypes.array.isRequired\n};\n\nexport default MultiSelect;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Checkbox,\n  Chip,\n  Divider,\n  FormControlLabel,\n  Input,\n  Card,\n  colors\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MultiSelect from './MultiSelect';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  keywords: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(2)\n  },\n  chips: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: theme.spacing(1)\n  },\n  selects: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    backgroundColor: colors.grey[50],\n    padding: theme.spacing(1)\n  },\n  inNetwork: {\n    marginLeft: 'auto'\n  }\n}));\n\nconst selects = [\n  {\n    label: 'Type',\n    options: ['Freelance', 'Full Time', 'Part Time', 'Internship']\n  },\n  {\n    label: 'Level',\n    options: ['Novice', 'Expert']\n  },\n  {\n    label: 'Location',\n    options: [\n      'Africa',\n      'Asia',\n      'Australia',\n      'Europe',\n      'North America',\n      'South America'\n    ]\n  },\n  {\n    label: 'Roles',\n    options: ['Android', 'Web Developer', 'iOS']\n  }\n];\n\nfunction Filter({ className, ...rest }) {\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState('');\n  const [chips, setChips] = useState([\n    'Freelance',\n    'Full Time',\n    'Novice',\n    'Europe',\n    'Android',\n    'Web Developer'\n  ]);\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n\n  const handleInputKeyup = (event) => {\n    event.persist();\n\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips((prevChips) => [...prevChips, inputValue]);\n        setInputValue('');\n      }\n    }\n  };\n\n  const handleChipDelete = (chip) => {\n    setChips((prevChips) => prevChips.filter((prevChip) => chip !== prevChip));\n  };\n\n  const handleMultiSelectChange = (value) => {\n    setChips(value);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.keywords}>\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          disableUnderline\n          onChange={handleInputChange}\n          onKeyUp={handleInputKeyup}\n          placeholder=\"Enter a keyword\"\n          value={inputValue}\n        />\n      </div>\n      <Divider />\n      <div className={classes.chips}>\n        {chips.map((chip) => (\n          <Chip\n            className={classes.chip}\n            key={chip}\n            label={chip}\n            onDelete={() => handleChipDelete(chip)}\n          />\n        ))}\n      </div>\n      <Divider />\n      <div className={classes.selects}>\n        {selects.map((select) => (\n          <MultiSelect\n            key={select.label}\n            label={select.label}\n            onChange={handleMultiSelectChange}\n            options={select.options}\n            value={chips}\n          />\n        ))}\n        <FormControlLabel\n          className={classes.inNetwork}\n          control={(\n            <Checkbox\n              color=\"primary\"\n              defaultChecked //\n            />\n          )}\n          label=\"In network\"\n        />\n      </div>\n    </Card>\n  );\n}\n\nFilter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Filter;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  addIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Browse projects\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            See the latest opportunities\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            component={RouterLink}\n            to=\"/projects/create\"\n            variant=\"contained\"\n          >\n            <AddIcon className={classes.addIcon} />\n            Submit project\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Grid,\n  Menu,\n  MenuItem,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport axios from 'src/utils/axios';\nimport Paginate from 'src/components/Paginate';\nimport ProjectCard from 'src/components/ProjectCard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    marginBottom: theme.spacing(2)\n  },\n  title: {\n    position: 'relative',\n    '&:after': {\n      position: 'absolute',\n      bottom: -8,\n      left: 0,\n      content: '\" \"',\n      height: 3,\n      width: 48,\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  actions: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  sortButton: {\n    textTransform: 'none',\n    letterSpacing: 0,\n    marginRight: theme.spacing(2)\n  },\n  paginate: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}));\n\nfunction Projects({ className, ...rest }) {\n  const classes = useStyles();\n  const sortRef = useRef(null);\n  const [openSort, setOpenSort] = useState(false);\n  const [selectedSort, setSelectedSort] = useState('Most popular');\n  const [mode, setMode] = useState('grid');\n  const [projects, setProjects] = useState([]);\n\n  const handleSortOpen = () => {\n    setOpenSort(true);\n  };\n\n  const handleSortClose = () => {\n    setOpenSort(false);\n  };\n\n  const handleSortSelect = (value) => {\n    setSelectedSort(value);\n    setOpenSort(false);\n  };\n\n  const handleModeChange = (event, value) => {\n    setMode(value);\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchProjects = () => {\n      axios.get('/api/projects').then((response) => {\n        if (mounted) {\n          setProjects(response.data.projects);\n        }\n      });\n    };\n\n    fetchProjects();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.header}>\n        <Typography\n          className={classes.title}\n          variant=\"h5\"\n        >\n          Showing\n          {' '}\n          {projects.length}\n          {' '}\n          projects\n        </Typography>\n        <div className={classes.actions}>\n          <Button\n            className={classes.sortButton}\n            onClick={handleSortOpen}\n            ref={sortRef}\n          >\n            {selectedSort}\n            <ArrowDropDownIcon />\n          </Button>\n          <ToggleButtonGroup\n            exclusive\n            onChange={handleModeChange}\n            size=\"small\"\n            value={mode}\n          >\n            <ToggleButton value=\"grid\">\n              <ViewModuleIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </div>\n      </div>\n      <Grid\n        container\n        spacing={3}\n      >\n        {projects.map((project) => (\n          <Grid\n            item\n            key={project.id}\n            md={mode === 'grid' ? 4 : 12}\n            sm={mode === 'grid' ? 6 : 12}\n            xs={12}\n          >\n            <ProjectCard project={project} />\n          </Grid>\n        ))}\n      </Grid>\n      <div className={classes.paginate}>\n        <Paginate pageCount={3} />\n      </div>\n      <Menu\n        anchorEl={sortRef.current}\n        className={classes.menu}\n        onClose={handleSortClose}\n        open={openSort}\n        elevation={1}\n      >\n        {['Most recent', 'Popular', 'Price high', 'Price low', 'On sale'].map(\n          (option) => (\n            <MenuItem\n              className={classes.menuItem}\n              key={option}\n              onClick={() => handleSortSelect(option)}\n            >\n              <ListItemText primary={option} />\n            </MenuItem>\n          )\n        )}\n      </Menu>\n    </div>\n  );\n}\n\nProjects.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Projects;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Container } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Filter from './Filter';\nimport Results from './Results';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  header: {\n    marginBottom: theme.spacing(3)\n  },\n  filter: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(6)\n  }\n}));\n\nfunction ProjectList() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Projects List\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header className={classes.header} />\n        <Filter className={classes.filter} />\n        <Results className={classes.results} />\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProjectList;\n"],"sourceRoot":""}