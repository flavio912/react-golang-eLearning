scalar UUID

schema {
  query: Query
  mutation: Mutation
}

type Query {
  info: String!
  user: User 
}

type Mutation {
  delegateLogin(input: DelegateLogin!): AuthToken
}

type PageInfo {
  total: Int! # Number of pages after this one
  offset: Int! # The offset of this page from the start
  limit: Int! # The max shown per page
  given: Int! # Number of items given
}

input Page {
  offset: Int
  limit: Int
}

interface PaginatedQuery {
  pageInfo: PageInfo
}

input OrderBy {
  ascending: Boolean
  field: String!
}

input DelegateLogin {
  TTC_ID: String!
  password: String!
  noResp: Boolean
}

type Company {
  approved: Boolean
  uuid: UUID!
  createdAt: String
  name: String!
  address: Address!
}

type Address {
  addressLine1: String!
  addressLine2: String!
  county: String!
  postCode: String!
  country: String!
}

enum UserType {
  manager
  individual
  delegate
}

type User {
  # certificates
  # onlineCourses: OnlineCoursePage
  # activity
  type: UserType!
  email: String
  firstName: String!
  lastName: String!
  telephone: String
  jobTitle: String
  lastLogin: String!
  company: Company
  profileImageUrl: String
  # address: Address
}



type AuthToken {
  token: String!
}
